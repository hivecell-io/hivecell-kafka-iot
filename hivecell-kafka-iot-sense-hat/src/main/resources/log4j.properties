log4j.rootLogger=WARN, stdout

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.encoding=UTF-8
#log4j.appender.stdout.layout.ConversionPattern=[%d] %p [%t] %m (%c)%n
log4j.appender.stdout.layout.ConversionPattern={"level":"%p","timestamp":"%d{ISO8601}","thread":"%t","file":"%F", "line":"%L","message":"%m"}%n

# Enable for debugging if need be
#log4j.logger.org.apache.kafka.streams=DEBUG, stdout
#log4j.additivity.org.apache.kafka.streams=false

# Squelch expected error messages like:
#     java.lang.IllegalStateException: This consumer has already been closed.
log4j.logger.org.apache.kafka.streams.processor.internals.StreamThread=FATAL, stdout

# Enable for debugging if need be
#log4j.logger.io.confluent=DEBUG, stdout
#log4j.additivity.io.confluent=false





#log4j.rootLogger=WARN, stdout, INFO, file
#
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#llog4j.appender.stdout.layout.ConversionPattern={"level":"%p","timestamp":"%d{ISO8601}","thread":"%t","file":"%F", "line":"%L","message":"%m"}%n

#
## Define the file appender
#log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
#
## Set the name of the file
#log4j.appender.file.File=${log}/log.out
#
## Set the immediate flush to true (default)
#log4j.appender.file.ImmediateFlush=true
#
## Set the threshold to debug mode
#log4j.appender.file.Threshold=info
#
## Set the append to false, should not overwrite
#log4j.appender.file.Append=true
#
## Set the DatePattern
#log4j.appender.file.DatePattern='.' yyyy-MM-dd-a
#
## Define the layout for file appender
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.conversionPattern=%m%n
